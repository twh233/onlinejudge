#include<iostream>
#include<cstdio>
#include<algorithm>
#include<queue>
#include<cstring>
#include<string>
#include<map>
#include<set>
#include<vector>
#include<list>
#include<stack>
#include<cmath>
#include<cstdlib>
#define INF 0x3f3f3f
typedef long long ll;
typedef unsigned long long ull;
using namespace std;
const int maxn=5e6+5;
const int maxm=5e6+5;
const ll mod=1e9+7;
const double PI=acos(-1.0);
int a[maxn],b[maxn],ans[maxm];
int n,k;

int check(int x){
	int j=n,cnt=0;
	for(int i=1;i<=n;i++){
		while(j>=1&&a[i]+b[j]>x){
			j--;
		}
		cnt+=j;		//有多少个数满足a[i]+b[j]<x;
	}

	if(cnt<k){
		return 1;
	}
	return 0;
}

int main(){
	scanf("%d %d",&n,&k);
	for(int i=1;i<=n;i++){
		scanf("%d",&a[i]);
	}
	for(int i=1;i<=n;i++){
		scanf("%d",&b[i]);
	}
	sort(a+1,a+1+n);
	sort(b+1,b+1+n);

	int l=1,r=200000000;
	while(l<r){
		int mid=(l+r)/2;
		if(check(mid)){
			l=mid+1;
		}else{
			r=mid;
		}
	}
	//先找到第k小的;

	int tot=0;
	for(int i=1;i<=n;i++){
		for(int j=1;j<=n;j++){
			if(a[i]+b[j]>=l){
				break;
			}
			ans[++tot]=a[i]+b[j];
		}
	}

	sort(ans+1,ans+1+tot);
	while(tot<k){
		tot+=1;
		ans[tot]=l;
	}

	int ok=1;
	for(int i=1;i<=k;i++){
		if(ok){
			printf("%d",ans[i]);
			ok=0;
		}else{
			printf(" %d",ans[i]);
		}
	}
	puts("");
	return 0;
}